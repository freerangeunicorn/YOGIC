{"version":3,"sources":["img/yoga.png","img/mudra.png","img/pair.png","components/Context.js","components/NavBar.js","components/Home.js","components/TeacherSignUp.js","components/StudentSignUp.js","components/Footer.js","components/Login.js","components/StudentLogin.js","components/TeacherProfile.js","components/StudentProfile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TokenContext","createContext","TokenProvider","props","useState","token","setToken","Provider","value","children","NavBar","useContext","history","useHistory","Navbar","expand","Brand","href","icon","faSeedling","Toggle","aria-controls","Collapse","id","Nav","className","Link","Fragment","NavDropdown","title","Item","Button","variant","onClick","push","Home","Carousel","src","Yoga","alt","Caption","Mudra","Pair","TeacherSignUp","email","setEmail","experience","setExperience","password","setPassword","password2","setPassword2","firstName","setFirstName","lastName","setLastName","timeZone","setTimeZone","showToast","setShowToast","show","setShow","errorMessage","setErrorMessage","useEffect","onSubmit","a","teacherData","first_name","last_name","years_experience","default_timezone","header","Headers","append","fetch","method","headers","body","JSON","stringify","response","json","data","error","Form","Row","Group","as","Col","controlId","Label","Control","required","onChange","event","target","type","placeholder","Toast","animation","Body","absolute","defaultValue","years","Number","isNaN","onExperience","Check","label","feedback","Alert","onClose","dismissible","Heading","StudentSignUp","emailAddress","setEmailAddress","fName","setFName","lName","setLName","pWord","setPWord","confirmPassword","setConfirmPassword","console","log","studentData","Accept","withCredentials","style","marginTop","marginBottom","Text","Footer","faFacebook","faInstagram","faLinkedin","faGithub","Date","getFullYear","Login","login","access_token","class","StudentLogin","TeacherProfile","setTeacherData","date","setDate","today","in30Days","getDate","setTitle","level","setLevel","price","setPrice","setStyle","description","setDescription","time","setTime","yogaClass","setYogaClass","teacherFirstName","setTeacherFirstName","teacherLastName","setTeacherLastName","teacherEmail","setTeacherEmail","teacherExperience","setTeacherExperience","then","msg","catch","createClass","getClasses","editProfile","newTeacherData","Tabs","defaultActiveKey","onSelect","Tab","eventKey","TabContent","rows","selected","minDate","maxDate","Dropdown","Menu","map","index","Card","Header","student_id","Badge","Title","ListGroup","duration","StudentProfile","setStudentData","toast","setToast","book","confirmation","handleSearch","searchParams","URLSearchParams","getMonth","url","URL","search","toString","key","hours","getHours","minutes","getMinutes","showTimeSelect","FormLabel","closeButton","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a4159361.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yoga.a1fd0355.png\";","module.exports = __webpack_public_path__ + \"static/media/mudra.12efd5d0.png\";","module.exports = __webpack_public_path__ + \"static/media/pair.e21b1bd0.png\";","import React from \"react\";\nimport { createContext, useState } from \"react\";\n\nexport const TokenContext = createContext();\n\nexport const TokenProvider = (props) => {\n  const [token, setToken] = useState(null);\n\n  return (\n    <TokenContext.Provider value={[token, setToken]}>\n      {props.children}\n    </TokenContext.Provider>\n  );\n};\n\nexport default TokenContext;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport {\n  Button,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n} from \"react-bootstrap\";\nimport { TokenContext } from \"./Context\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSeedling } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction NavBar() {\n  const [token, setToken] = useContext(TokenContext);\n  const history = useHistory();\n  const handleLogOut = () => {\n    setToken(null);\n    history.push(\"/\");\n  };\n\n  return (\n    <div>\n      <Navbar expand=\"lg\">\n        <Navbar.Brand href=\"#home\">\n          {\" \"}\n          YOGIC <FontAwesomeIcon icon={faSeedling} />{\" \"}\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link href=\"./.\">Home</Nav.Link>\n            {!token && (\n              <React.Fragment>\n                <NavDropdown title=\"Login\" id=\"collasible-nav-dropdown\">\n                  <NavDropdown.Item href=\"./login\">\n                    As a teacher {token}\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"./studentlogin\">\n                    Student {token}\n                  </NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown title=\"Signup\" id=\"collasible-nav-dropdown\">\n                  <NavDropdown.Item href=\"./signupteacher\">\n                    Teacher{\" \"}\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"./signupstudent\">\n                    Student\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </React.Fragment>\n            )}\n            {token && (\n              <Button variant=\"outline-light\" onClick={() => handleLogOut()}>\n                Log out\n              </Button>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Button, Form, Col, Carousel } from \"react-bootstrap\";\nimport Yoga from \"../img/yoga.png\";\nimport Mudra from \"../img/mudra.png\";\nimport Pair from \"../img/pair.png\";\n\nfunction Home() {\n  return (\n    <div className=\"home-page\">\n      <Carousel>\n        <Carousel.Item>\n          <img className=\"d-block w-100 carousel-img\" src={Yoga} alt=\"Yoga\" />\n          <Carousel.Caption>\n            <h3>\n              “Take care of your body, it's the only place you have to live.”\n            </h3>\n            <p>- Jim Rohn</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img className=\"d-block w-100 carousel-img\" src={Mudra} alt=\"Mudra\" />\n\n          <Carousel.Caption>\n            <h3>\n              \"Yoga is the journey of the self, through the self, to the self.\"\n            </h3>\n            <p>- The Bhagavad Gita</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img className=\"d-block w-100 carousel-img\" src={Pair} alt=\"Cat\" />\n\n          <Carousel.Caption>\n            <h3>\n              Yoga is like music: the rhythm of the body, the melody of the\n              mind, and the harmony of the soul create the symphony of life.”\n            </h3>\n            <p>- B.K.S. Iyengar</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Form, Col, Button, Toast, ToastBody, Alert } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport TimezonePicker from \"react-bootstrap-timezone-picker\";\nimport \"react-bootstrap-timezone-picker/dist/react-bootstrap-timezone-picker.min.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction TeacherSignUp() {\n  const [email, setEmail] = useState();\n  const [experience, setExperience] = useState(1);\n  const [password, setPassword] = useState();\n  const [password2, setPassword2] = useState();\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [timeZone, setTimeZone] = useState(\"Europe/Stockholm\");\n  const [showToast, setShowToast] = useState(false);\n  const [show, setShow] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"Something went wrong\");\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (password === password2) {\n      setShowToast(false);\n    } else {\n      setShowToast(true);\n    }\n  }, [password, password2]);\n\n  const onExperience = (value) => {\n    \n    const years = Number(value);\n    if (Number.isNaN(years)) {\n      \n      setExperience(0);\n    } else {\n      setExperience(years);\n    }\n  };\n\n  const onSubmit = async () => {\n    const url = \"/api/teacher\";\n    const teacherData = {\n      first_name: firstName,\n      last_name: lastName,\n      password: password,\n      email: email,\n      years_experience: experience,\n      default_timezone: timeZone,\n    };\n    \n\n    try {\n      const header = new Headers();\n      header.append(\"Accept\", \"application/json\");\n      header.append(\"Content-type\", \"application/json\");\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: header,\n        //withCredentials: true,\n        body: JSON.stringify(teacherData),\n      });\n      \n      const data = await response.json();\n      if (data.id) {\n        history.push(\"/login\");\n      } else {\n        setErrorMessage(data.error);\n        setShow(true);\n      }\n\n      \n    } catch (error) {\n      setErrorMessage(\"network problem\");\n      setShow(true);\n    }\n  };\n\n\n  return (\n    <div className=\"sign-up\">\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control\n              required\n              value={email}\n              onChange={(event) => setEmail(event.target.value)}\n              type=\"email\"\n              placeholder=\"Enter email\"\n            />\n          </Form.Group>\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              value={password}\n              onChange={(event) => setPassword(event.target.value)}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n          <Toast show={showToast} animation={false}>\n            <Toast.Body>Your password doesn't match!</Toast.Body>\n          </Toast>\n          <Form.Group as={Col} controlId=\"formGridPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              value={password2}\n              onChange={(event) => {\n                setPassword2(event.target.value);\n              }}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Group controlId=\"formGridName1\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control\n            required\n            value={firstName}\n            onChange={(event) => setFirstName(event.target.value)}\n            placeholder=\"First Name\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formGridName2\">\n          <Form.Label>Last Name</Form.Label>\n          <Form.Control\n            required\n            value={lastName}\n            onChange={(event) => setLastName(event.target.value)}\n            placeholder=\"Last Name\"\n          />\n        </Form.Group>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formGridTime\">\n            <Form.Label>Default Timezone</Form.Label>\n            <br />\n            <TimezonePicker\n              className=\"zone-picker\"\n              absolute={false}\n              defaultValue={timeZone}\n              placeholder=\"Select timezone...\"\n              onChange={(timeZone) => setTimeZone(timeZone)}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formGridExperience\">\n            <Form.Label>Years of Experience</Form.Label>\n            <Form.Control\n              required\n              value={experience}\n              onChange={(event) => onExperience(event.target.value)}\n              placeholder=\"Enter a number\"\n            />\n          </Form.Group>\n        </Form.Row>\n        <Form.Group id=\"formGridCheckbox\">\n          <Form.Check\n            required\n            type=\"checkbox\"\n            label=\"I agree to these terms\"\n            feedback=\"You must agree before submitting.\"\n          />\n        </Form.Group>\n        <Button variant=\"dark\" onClick={() => onSubmit()}>\n          Submit\n        </Button>\n      </Form>\n      <Alert\n        variant=\"danger\"\n        show={show}\n        onClose={() => setShow(false)}\n        dismissible\n      >\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n        <p>{errorMessage}</p>\n      </Alert>\n    </div>\n  );\n}\n\nexport default TeacherSignUp;\n","import React from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\n\nfunction StudentSignUp() {\n  const [emailAddress, setEmailAddress] = useState();\n  const [fName, setFName] = useState();\n  const [lName, setLName] = useState();\n  const [pWord, setPWord] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n\n  const onSubmit = async () => {\n    console.log(\"submit\");\n\n    const url = \"/api/student\";\n    const studentData = {\n      first_name: fName,\n      last_name: lName,\n      password: pWord,\n      email: emailAddress,\n    };\n    console.log(JSON.stringify(studentData));\n    try {\n      const header = new Headers();\n      header.append(\"Accept\", \"application/json\");\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        withCredentials: true,\n        body: JSON.stringify(studentData),\n      });\n      console.log(response);\n      const data = await response.json();\n\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div\n      className=\"d-flex justify-content-center\"\n      style={{ marginTop: \"20px\", marginBottom: \"10px\" }}\n    >\n      <Form>\n        <Form.Row>\n          <Col>\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              required\n              value={fName}\n              onChange={(event) => setFName(event.target.value)}\n              placeholder=\"First name\"\n            />\n          </Col>\n          <Col>\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              required\n              value={lName}\n              onChange={(event) => setLName(event.target.value)}\n              placeholder=\"Last name\"\n            />\n          </Col>\n        </Form.Row>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            required\n            value={emailAddress}\n            onChange={(event) => setEmailAddress(event.target.value)}\n            type=\"email\"\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            value={pWord}\n            onChange={(event) => setPWord(event.target.value)}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formConfirmPassword\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            value={confirmPassword}\n            onChange={(event) => setConfirmPassword(event.target.value)}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"I agree to these terms\" />\n        </Form.Group>\n        <Button variant=\"dark\" onClick={() => onSubmit()}>\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\nexport default StudentSignUp;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebook,\n  faInstagram,\n  faLinkedin,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nfunction Footer() {\n  return (\n    <div className=\"main-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          {/* Column1 */}\n          <div className=\"col\">\n            <h6>Yoga from the comfort of your home</h6>\n            <ul className=\"list-unstyled\">\n              <li>Phone number</li>\n              <li>Location</li>\n              <li>Address</li>\n            </ul>\n          </div>\n          {/* Column2 */}\n          <div className=\"col\">\n            <h7>YOGIC</h7>\n            <ul className=\"list-unstyled\">\n              <li>About</li>\n              <li>The team</li>\n              <li>Blog</li>\n            </ul>\n          </div>\n          {/* Column3 */}\n          <div className=\"col\">\n            <h7>Follow us</h7>\n            <ul className=\"list-unstyled\">\n              <li>\n                <FontAwesomeIcon icon={faFacebook} />\n              </li>\n              <li>\n                <FontAwesomeIcon icon={faInstagram} />\n              </li>\n              <li>\n                <FontAwesomeIcon icon={faLinkedin} />\n              </li>\n              <li>\n                <FontAwesomeIcon icon={faGithub} />\n              </li>\n\n              <li></li>\n            </ul>\n          </div>\n        </div>\n        <hr />\n        <div className=\"row\">\n          <p className=\"col-sm\">\n            &copy;{new Date().getFullYear()} YOGIC AB | All rights reserved |\n            Terms Of Service | Privacy\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Footer;\n","import React from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { TokenContext } from \"./Context\";\n\nfunction Login() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [show, setShow] = useState(false);\n  const [token, setToken] = useContext(TokenContext);\n  const [errorMessage, setErrorMessage] = useState(\"Something went wrong\");\n  const history = useHistory();\n\n  const onSubmit = async () => {\n    const url = \"/api/login/teacher\";\n    const login = {\n      password: password,\n      email: email,\n    };\n    console.log(JSON.stringify(login));\n    try {\n      const header = new Headers();\n      header.append(\"Accept\", \"application/json\");\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        withCredentials: true,\n        body: JSON.stringify(login),\n      });\n\n      const data = await response.json();\n      console.log();\n      if (data.access_token) {\n        setToken(data.access_token); //if token is authorized it will push to teacherprofile\n        history.push(\"/teacherprofile\");\n      } else {\n        setShow(true);\n        setErrorMessage(\"Login failed, try your luck one more time\");\n      }\n\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div class=\"d-flex justify-content-center\" style={{ marginTop: \"30px\" }}>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            required\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n            type=\"email\"\n            placeholder=\"Enter teacher email\"\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n\n        <Button variant=\"dark\" onClick={() => onSubmit()}>\n          Submit\n        </Button>\n      </Form>\n      <Alert\n        variant=\"danger\"\n        show={show}\n        onClose={() => setShow(false)}\n        dismissible\n      >\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n        <p>{errorMessage}</p>\n      </Alert>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { TokenContext } from \"./Context\";\n\nfunction StudentLogin() {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [token, setToken] = useContext(TokenContext);\n  const [show, setShow] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"Something went wrong\");\n  const history = useHistory();\n\n  const onSubmit = async () => {\n    const url = \"/api/login/student\";\n    const login = {\n      password: password,\n      email: email,\n    };\n    try {\n      const header = new Headers();\n      header.append(\"Accept\", \"application/json\");\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n        withCredentials: true,\n        body: JSON.stringify(login),\n      });\n\n      const data = await response.json();\n      if (data.access_token) {\n        setToken(data.access_token);\n        history.push(\"./studentprofile\");\n      } else {\n        setShow(true);\n        setErrorMessage(\"Login failed, try your luck one more time\");\n      }\n   \n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div class=\"d-flex justify-content-center\" style={{ marginTop: \"30px\" }}>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            required\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n            type=\"email\"\n            placeholder=\"Enter email\"\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Form.Group>\n\n        <Button variant=\"dark\" onClick={() => onSubmit()}>\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default StudentLogin;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport {\n  Form,\n  Tabs,\n  Tab,\n  Button,\n  Alert,\n  TabContent,\n  Card,\n  ListGroup,\n  Badge,\n  Dropdown,\n  \n} from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { TokenContext } from \"./Context\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport TimeRangePicker from \"@wojtekmaj/react-timerange-picker\";\n\n\nfunction TeacherProfile() {\n  const [teacherData, setTeacherData] = useState({});\n  const [show, setShow] = useState(false);\n  const [token, setToken] = useContext(TokenContext);\n  const history = useHistory();\n  const [date, setDate] = useState(new Date());\n  const handleChange = (date) => setDate(date);\n\n  const today = new Date();\n  let in30Days = new Date();\n  in30Days.setDate(in30Days.getDate() + 30);\n  // set the state here for what will be used in the create class form and then do handleChange\n  const [title, setTitle] = useState();\n  const [level, setLevel] = useState();\n  const [price, setPrice] = useState();\n  const [style, setStyle] = useState();\n  const [description, setDescription] = useState(\"\");\n  const [time, setTime] = useState();\n  const onChange = (time) => setTime(time);\n\n  const [yogaClass, setYogaClass] = useState([]);\n  const [teacherFirstName, setTeacherFirstName] = useState();\n  const [teacherLastName, setTeacherLastName] = useState();\n  const [teacherEmail, setTeacherEmail] = useState();\n  const [teacherExperience, setTeacherExperience] = useState();\n\n  useEffect(() => {\n    const url = \"/api/teacher\"; // buy a domain name and change this url\n    const header = new Headers();\n    header.append(\"Accept\", \"application/json\");\n    header.append(\"Content-type\", \"application/json\");\n    header.append(\"Authorization\", `Bearer ${token}`);\n    fetch(url, {\n      method: \"GET\",\n      headers: header,\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data[0].id) {\n          setTeacherData(data[0]);\n          setTeacherFirstName(data[0].first_name);\n          setTeacherLastName(data[0].last_name);\n          setTeacherEmail(data[0].email);\n          setTeacherExperience(data[0].years_experience);\n        } else if (data.msg === \"Missing Authorization Header\") {\n          history.push(\"/login\");\n        }\n      })\n      .catch((error) => {\n        // setShow(true);\n        console.log(\"error\");\n        console.log(error);\n      });\n\n    return () => {\n      console.log(\"unsubscribe\");\n    };\n  }, [token, history]);\n\n  const onSubmit = async () => {\n    const url = \"/api/yogaclass\";\n    const createClass = {\n      title: title,\n      level: level,\n      price: price,\n      style: style,\n      date: date,\n      time: time,\n      description: description,\n    };\n\n    try {\n      const header = new Headers();\n      header.append(\"Accept\", \"application/json\");\n      header.append(\"Content-type\", \"application/json\");\n      header.append(\"Authorization\", `Bearer ${token}`);\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: header,\n        body: JSON.stringify(createClass),\n      });\n\n      const data = await response.json();\n      if (data) {\n        setShow(true);\n      }\n    } catch (error) {\n      console.log(\"error\");\n      console.log(error);\n    }\n  };\n\n  const getClasses = async () => {\n    const url = \"/api/yogaclass\"; // buy a domain name and change this url\n    const header = new Headers();\n    header.append(\"Accept\", \"application/json\");\n    header.append(\"Content-type\", \"application/json\");\n    header.append(\"Authorization\", `Bearer ${token}`);\n\n    fetch(url, {\n      method: \"GET\",\n      headers: header,\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setYogaClass(data);\n      })\n      .catch((error) => {\n        // setShow(true);\n        console.log(\"error\");\n        console.log(error);\n      });\n\n    return () => {\n      console.log(\"unsubscribe\");\n    };\n  };\n\n  const editProfile = async () => {\n    const newTeacherData = {\n      first_name: teacherFirstName,\n      last_name: teacherLastName,\n      email: teacherEmail,\n      years_experience: teacherExperience,\n    };\n\n    const url = \"/api/teacher\"; // buy a domain name and change this url\n\n    const header = new Headers();\n    header.append(\"Accept\", \"application/json\");\n    header.append(\"Content-type\", \"application/json\");\n    header.append(\"Authorization\", `Bearer ${token}`);\n\n    fetch(url, {\n      method: \"PUT\",\n      headers: header,\n      body: JSON.stringify(newTeacherData),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .catch((error) => {\n        console.log(\"error\");\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <Tabs\n        className=\"d-flex justify-content-center\"\n        defaultActiveKey=\"profile\"\n        id=\"uncontrolled-tab-example\"\n        onSelect={(event) => {\n          if (event === \"myclasses\") {\n            getClasses();\n          }\n        }}\n      >\n        <Tab eventKey=\"profile\" title=\"My profile\">\n          <Form className=\"form-centered\">\n            <Form.Group controlId=\"formName\">\n              <Form.Label>First Name:</Form.Label>\n\n              <Form.Control\n                value={teacherFirstName}\n                onChange={(event) => setTeacherFirstName(event.target.value)}\n              />\n              <Form.Label>Last Name:</Form.Label>\n              <Form.Control\n                value={teacherLastName}\n                onChange={(event) => setTeacherLastName(event.target.value)}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email:{teacherEmail}</Form.Label>\n            </Form.Group>\n            <Form.Group controlId=\"formYears\">\n              <Form.Label>Experience:</Form.Label>\n              <Form.Control\n                value={teacherExperience}\n                onChange={(event) => setTeacherExperience(event.target.value)}\n              />\n            </Form.Group>\n            <Button variant=\"success\" onClick={() => editProfile()}>\n              Save\n            </Button>\n          </Form>\n          <TabContent />\n        </Tab>\n        <Tab eventKey=\"Schedule\" title=\"Schedule a class\">\n          {/* <TabContent /> */}\n          <div>\n            <Form className=\"form-centered\">\n              <Form.Group controlId=\"formGridTitle\">\n                <Form.Label>Title:</Form.Label>\n                <Form.Control\n                  value={title}\n                  onChange={(event) => setTitle(event.target.value)}\n                  placeholder=\"Name your class\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formGridLevel\">\n                <Form.Label>Level:</Form.Label>\n                <Form.Control\n                  required\n                  value={level}\n                  onChange={(event) => setLevel(event.target.value)}\n                  placeholder=\"Beginner, intermediate, advanced or all\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formGridPrice\">\n                <Form.Label>What's your price?</Form.Label>\n                <Form.Control\n                  value={price}\n                  onChange={(event) => setPrice(event.target.value)}\n                  placeholder=\"Your price in USD\"\n                />\n              </Form.Group>\n              <Form.Group controlId=\"formGridLevel\">\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                  <Form.Label>Describe your class:</Form.Label>\n                  <Form.Control\n                    value={description}\n                    onChange={(event) => setDescription(event.target.value)}\n                    as=\"textarea\"\n                    rows=\"3\"\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formGridDate\">\n                  <Form.Label>Select a date: </Form.Label>\n                  <br />\n                  <DatePicker\n                    selected={date}\n                    onChange={handleChange}\n                    minDate={today}\n                    maxDate={in30Days}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formGridTime\">\n                  <Form.Label>Select time: </Form.Label>\n                  <br />\n                  <TimeRangePicker value={time} onChange={onChange} />\n                </Form.Group>\n                <Dropdown\n                  value={style}\n                  onSelect={(eventKey) => setStyle(eventKey)}\n                >\n                  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Pick a style\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"Hatha\">Hatha</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Vinyasa\">Vinyasa</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Yin\">Yin Yoga</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Restorative\">\n                      Restorative\n                    </Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Ashtanga\">Ashtanga</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Power\">Power Yoga</Dropdown.Item>\n                    <Dropdown.Item eventKey=\"Pre-Natal\">\n                      Pre-natal\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Form.Group>\n              <Button variant=\"dark\" onClick={() => onSubmit()}>\n                Submit\n              </Button>\n            </Form>\n            {show && (\n              <Alert\n                onClose={() => setShow(false)}\n                dismissible\n                variant=\"success\"\n              >\n                Your class has been successfully created!\n              </Alert>\n            )}\n          </div>\n        </Tab>\n        <Tab eventKey=\"myclasses\" title=\"My classes\">\n          {yogaClass.map((yogaClass, index) => (\n            <React.Fragment>\n              <Card className=\"yoga-card\" style={{ marginBottom: 20 }}>\n                <Card.Header className=\"card-header\">\n                  {yogaClass.title}\n                  {yogaClass.student_id && (\n                    <Badge variant=\"success\">Booked</Badge>\n                  )}\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title>Level:{yogaClass.level} </Card.Title>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>Time: {yogaClass.time}</ListGroup.Item>\n                    <ListGroup.Item>Price: ${yogaClass.price}</ListGroup.Item>\n                    <ListGroup.Item>Date: {yogaClass.date}</ListGroup.Item>\n                    <ListGroup.Item>Style: {yogaClass.style}</ListGroup.Item>\n                    <ListGroup.Item>\n                      Description: {yogaClass.description}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      Duration: {yogaClass.duration} minutes\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Card.Body>\n              </Card>\n            </React.Fragment>\n          ))}\n        </Tab>\n      </Tabs>\n    </div>\n  );\n}\nexport default TeacherProfile;\n","import React, { Fragment } from \"react\";\nimport {\n  Card,\n  Button,\n  Tab,\n  TabContent,\n  Tabs,\n  ListGroup,\n  Toast,\n  ToastBody,\n  ToastHeader,\n  Col,\n  Form,\n  Dropdown,\n  FormLabel,\n} from \"react-bootstrap\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { TokenContext } from \"./Context\";\nimport { useHistory } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction StudentProfile() {\n  const [studentData, setStudentData] = useState({}); // check the backend code for GET studentdata\n  const [show, setShow] = useState(false);\n  const [token, setToken] = useContext(TokenContext);\n  const [yogaClass, setYogaClass] = useState([]);\n  const [toast, setToast] = useState(false);\n  const [style, setStyle] = useState();\n  const history = useHistory();\n  const [date, setDate] = useState(new Date());\n\n  const today = new Date();\n  let in30Days = new Date();\n  in30Days.setDate(in30Days.getDate() + 30);\n  const [time, setTime] = useState();\n\n  console.log(\"show me data; yoga class\", yogaClass);\n\n  const handleChange = (date) => {\n    setDate(date);\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    setTime(`${hours}:${minutes}`);\n  };\n\n  useEffect(() => {\n    const url = \"/api/student\"; // pushed here if studentLogin is successful\n    const header = new Headers();\n    header.append(\"Accept\", \"application/json\");\n    header.append(\"Content-type\", \"application/json\");\n    header.append(\"Authorization\", `Bearer ${token}`);\n    fetch(url, {\n      method: \"GET\",\n      headers: header,\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        if (data[0].id) {\n          console.log(data);\n          setStudentData(data[0]);\n        } else if (data.msg === \"Missing Authorization Header\") {\n          history.push(\"/studentlogin\");\n        }\n      })\n      .catch((error) => {\n        setShow(true);\n        console.log(\"error\");\n        console.log(error);\n      });\n\n    return () => {\n      console.log(\"unsubscribe\");\n    };\n  }, [token, history]);\n\n  const getClasses = async () => {\n    console.log(\"SUP\");\n    const url = \"/api/yogaclass\";\n    const header = new Headers();\n    header.append(\"Accept\", \"application/json\");\n    header.append(\"Content-type\", \"application/json\");\n    header.append(\"Authorization\", `Bearer ${token}`);\n\n    fetch(url, {\n      method: \"GET\",\n      headers: header,\n    })\n      .then((response) => {\n        console.log(\"2PAC\", response);\n        return response.json();\n      })\n      .then((data) => {\n        setYogaClass(data);\n        console.log(\"YOOOOO\", data);\n      })\n      .catch((error) => {\n        setShow(true);\n        console.log(\"error\");\n        console.log(error);\n      });\n  };\n\n  const book = async (id) => {\n    console.log(\"SUPPERMAN\", id);\n    const url = \"/api/bookclass\"; \n    const header = new Headers();\n    header.append(\"Accept\", \"application/json\");\n    header.append(\"Content-type\", \"application/json\");\n    header.append(\"Authorization\", `Bearer ${token}`);\n\n    fetch(url, {\n      method: \"PUT\",\n      headers: header,\n      body: JSON.stringify({ id: id }),\n    })\n      .then((response) => {\n        console.log(\"confirmation response from be\", response);\n        return response.json();\n      })\n      .then((data) => {\n        setToast(data.confirmation);\n      })\n      .catch((error) => {});\n  };\n\n  const handleSearch = async () => {\n    console.log(\"SEARCH\");\n    const searchParams = new URLSearchParams(\n      `filter=time^eq^${time},date^eq^${date.getFullYear()}-${\n        date.getMonth() + 1\n      }-${date.getDate()},style^eq^${style}`\n    );\n    const url = new URL(\"https://yogicc.herokuapp.com/:3000/api/yogaclass\"); \n    const header = new Headers();\n    header.append(\"Accept\", \"application/json\");\n    header.append(\"Content-type\", \"application/json\");\n    header.append(\"Authorization\", `Bearer ${token}`);\n\n    url.search = searchParams.toString();\n\n    fetch(url, {\n      method: \"GET\",\n      headers: header,\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        setYogaClass(data);\n      })\n      .catch((error) => {\n        setShow(true);\n      });\n  };\n\n  return (\n    <div className=\"parentcontainer\">\n      <Tabs\n        defaultActiveKey=\"studentClasses\"\n        id=\"studentProfile\"\n        onSelect={(event) => {\n          if (event === \"allClasses\") {\n            getClasses();\n          } else if (event === \"Search\") {\n            setYogaClass([]);\n          }\n        }}\n      >\n        <Tab eventKey=\"studentClasses\" title=\"My Classes\">\n          <TabContent>\n            <Card className=\"text-center\" style={{ marginBottom: 20 }}>\n              <Card.Header>Upcoming class:</Card.Header>\n              <Card.Body>\n                <Card.Title>\n                  {studentData.first_name} {studentData.last_name}{\" \"}\n                </Card.Title>\n                <Card.Text>Next class:</Card.Text>\n                <Button variant=\"dark\">Enter</Button>\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">Previous: </Card.Footer>\n            </Card>\n          </TabContent>\n        </Tab>\n        <Tab eventKey=\"allClasses\" title=\"Explore Yoga classes\">\n          {yogaClass.map((yogaClass, index) => (\n            <React.Fragment key={index}>\n              <Card style={{ marginBottom: 20 }}>\n                <Card.Header>{yogaClass.title} </Card.Header>\n                <Card.Body>\n                  <Card.Title>Level:{yogaClass.level} </Card.Title>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      Teacher:{yogaClass.first_name} {yogaClass.last_name}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      Years of experience:{yogaClass.years_experience}\n                    </ListGroup.Item>\n                    <ListGroup.Item> Time:{yogaClass.time}</ListGroup.Item>\n                    <ListGroup.Item>Price: {yogaClass.price}</ListGroup.Item>\n                    <ListGroup.Item>Date: {yogaClass.date}</ListGroup.Item>\n                    <ListGroup.Item>Style: {yogaClass.style}</ListGroup.Item>\n                    <ListGroup.Item>\n                      Duration: {yogaClass.duration} minutes\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      Description: {yogaClass.description}\n                    </ListGroup.Item>\n                  </ListGroup>\n                  <Button\n                    class=\"button-center\"\n                    onClick={() => {\n                      book(yogaClass.id);\n                    }}\n                    variant=\"success\">\n                    Book\n                  </Button>\n                </Card.Body>\n              </Card>\n            </React.Fragment>\n          ))}\n        </Tab>\n        <Tab eventKey=\"Search\" title=\"Search a class\">\n          <TabContent />\n          <Form className=\"search-form\">\n            <Form.Group controlId=\"formBasicDate\">\n              <Form.Label>Select a date: </Form.Label>\n              <br />\n              <DatePicker\n                selected={date}\n                onChange={handleChange}\n                minDate={today}\n                maxDate={in30Days}\n                showTimeSelect\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicStyle\">\n              <FormLabel>Pick a style!</FormLabel>\n              <Dropdown\n                value={style}\n                onSelect={(eventKey) => setStyle(eventKey)}>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  Style\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item eventKey=\"Hatha\">Hatha</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"Vinyasa\">Vinyasa</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"Yin\">Yin Yoga</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"Restorative\">\n                    Restorative\n                  </Dropdown.Item>\n                  <Dropdown.Item eventKey=\"Ashtanga\">Ashtanga</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"Power\">Power Yoga</Dropdown.Item>\n                  <Dropdown.Item eventKey=\"Pre-Natal\">Pre-natal</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Form.Group>\n            <Button variant=\"dark\" onClick={() => handleSearch()}>\n              Search\n            </Button>\n          </Form>\n          <Card style={{ marginBottom: 20 }}>\n            {yogaClass.map((yogaClass, index) => (\n              <React.Fragment key={index}>\n                <Card.Header>{yogaClass.title} </Card.Header>\n                <Card.Body>\n                  <Card.Title>Level:{yogaClass.level} </Card.Title>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      Teacher: {yogaClass.first_name} {yogaClass.last_name}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                      Years of experience: {yogaClass.years_experience}\n                    </ListGroup.Item>\n                    <ListGroup.Item> Time: {yogaClass.time}</ListGroup.Item>\n                    <ListGroup.Item>Price: ${yogaClass.price}</ListGroup.Item>\n                    <ListGroup.Item>Date: {yogaClass.date}</ListGroup.Item>\n                    <ListGroup.Item>Style: {yogaClass.style}</ListGroup.Item>\n                    <ListGroup.Item>\n                      Duration: {yogaClass.duration} minutes\n                    </ListGroup.Item>\n                  </ListGroup>\n                  <Card.Text> Description: {yogaClass.description}</Card.Text>\n                  <Button variant=\"dark\" onClick={() => book(yogaClass.id)}>\n                    Book\n                  </Button>{\" \"}\n                  {/* can u use the same book for async? */}\n                </Card.Body>\n              </React.Fragment>\n            ))}\n          </Card>\n          <TabContent />\n        </Tab>\n      </Tabs>\n      <Toast show={toast}>\n        <Toast.Header closeButton=\"True\">\n          <strong className=\"mr-auto\">\n            Thank you {studentData.first_name} {studentData.last_name}\n          </strong>\n          <small>just now</small>\n        </Toast.Header>\n        <Toast.Body>\n          BOOKED! Confirmation has been sent to your email!.\n        </Toast.Body>\n      </Toast>\n    </div>\n  );\n}\n\nexport default StudentProfile;\n","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\nimport TeacherSignUp from './components/TeacherSignUp';\nimport StudentSignUp from './components/StudentSignUp';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\nimport { TokenProvider } from './components/Context';\nimport StudentLogin from './components/StudentLogin';\nimport TeacherProfile from './components/TeacherProfile';\nimport StudentProfile from './components/StudentProfile';\n\n\n\n\nfunction App() {\n  return (\n<TokenProvider>\n    <div className=\"page-container\">\n      <div className=\"content-wrap\">\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/studentlogin\" component={StudentLogin} />\n            <Route path=\"/signupteacher\" component={TeacherSignUp}/>\n            <Route path=\"/teacherprofile\" component={TeacherProfile}/>\n            <Route path=\"/studentprofile\" component={StudentProfile}/>\n            <Route path=\"/signupstudent\" component={StudentSignUp} />\n          </Switch>\n          </Router>\n        </div>\n        <Footer />\n    </div>\n    </TokenProvider>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}